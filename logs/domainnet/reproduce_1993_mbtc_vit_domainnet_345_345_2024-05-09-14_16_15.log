2024-05-09 14:16:15,279 [trainer.py] => prefix: Reproduce
2024-05-09 14:16:15,279 [trainer.py] => dataset: domainnet
2024-05-09 14:16:15,279 [trainer.py] => memory_size: 0
2024-05-09 14:16:15,279 [trainer.py] => memory_per_class: 0
2024-05-09 14:16:15,279 [trainer.py] => fixed_memory: True
2024-05-09 14:16:15,279 [trainer.py] => shuffle: False
2024-05-09 14:16:15,279 [trainer.py] => init_cls: 345
2024-05-09 14:16:15,279 [trainer.py] => increment: 345
2024-05-09 14:16:15,279 [trainer.py] => total_sessions: 6
2024-05-09 14:16:15,279 [trainer.py] => model_name: duct
2024-05-09 14:16:15,279 [trainer.py] => net_type: vit
2024-05-09 14:16:15,280 [trainer.py] => merge_scalar: 0.25
2024-05-09 14:16:15,280 [trainer.py] => head_merge_ratio: 0.25
2024-05-09 14:16:15,280 [trainer.py] => ot_reg: 0.01
2024-05-09 14:16:15,280 [trainer.py] => lr_re: 0.001
2024-05-09 14:16:15,280 [trainer.py] => epc_re: 5
2024-05-09 14:16:15,280 [trainer.py] => embd_dim: 768
2024-05-09 14:16:15,280 [trainer.py] => device: [device(type='cuda', index=0), device(type='cuda', index=3)]
2024-05-09 14:16:15,280 [trainer.py] => seed: 1993
2024-05-09 14:16:15,280 [trainer.py] => EPSILON: 1e-08
2024-05-09 14:16:15,280 [trainer.py] => bcb_lr_scale: 0.01
2024-05-09 14:16:15,280 [trainer.py] => re_load: True
2024-05-09 14:16:15,280 [trainer.py] => freeze_old: False
2024-05-09 14:16:15,280 [trainer.py] => epochs: 15
2024-05-09 14:16:15,280 [trainer.py] => lrate: 0.1
2024-05-09 14:16:15,280 [trainer.py] => milestones: [60, 100, 140]
2024-05-09 14:16:15,280 [trainer.py] => lrate_decay: 0.1
2024-05-09 14:16:15,280 [trainer.py] => weight_decay: 0.0005
2024-05-09 14:16:15,280 [trainer.py] => batch_size: 128
2024-05-09 14:16:15,280 [trainer.py] => num_workers: 16
2024-05-09 14:16:15,280 [trainer.py] => logfilename: logs/reproduce_1993_mbtc_vit_domainnet_345_345_2024-05-09-14:16:15
2024-05-09 14:16:15,280 [data.py] => Learning sequence of domains: ['clipart', 'infograph', 'painting', 'quickdraw', 'real', 'sketch']
2024-05-09 14:16:16,277 [data_manager.py] => class order: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069]
2024-05-09 14:16:32,229 [vit_inc.py] => You are now using `vit_base_patch16_224` as backbone.
2024-05-09 14:16:33,789 [_builder.py] => Loading pretrained weights from url (https://storage.googleapis.com/vit_models/augreg/B_16-i21k-300ep-lr_0.001-aug_medium1-wd_0.1-do_0.0-sd_0.0--imagenet2012-steps_20k-lr_0.01-res_224.npz)
2024-05-09 14:16:35,374 [trainer.py] => All params: 91326184
2024-05-09 14:16:35,374 [trainer.py] => Trainable params: 91326184
2024-05-09 14:16:35,374 [mbtc.py] => Learning on 0-345
2024-05-09 14:21:52,901 [mbtc.py] => Initial epochs: 15
2024-05-09 14:23:12,012 [mbtc.py] => Task 0, Epoch 1/15 => Loss 5.157
2024-05-09 14:23:12,012 [mbtc.py] => {'Train loss': 5.157336978511956}
2024-05-09 14:24:28,378 [mbtc.py] => Task 0, Epoch 2/15 => Loss 1.800
2024-05-09 14:24:28,378 [mbtc.py] => {'Train loss': 1.799572602028155}
2024-05-09 14:25:44,560 [mbtc.py] => Task 0, Epoch 3/15 => Loss 1.244
2024-05-09 14:25:44,560 [mbtc.py] => {'Train loss': 1.243724559554617}
2024-05-09 14:27:00,773 [mbtc.py] => Task 0, Epoch 4/15 => Loss 1.052
2024-05-09 14:27:00,773 [mbtc.py] => {'Train loss': 1.051556554231935}
2024-05-09 14:28:52,682 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:29:09,232 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:29:09,233 [mbtc.py] => {'Train acc': 80.99, 'Test acc': 81.94}
2024-05-09 14:29:09,233 [mbtc.py] => Task 0, Epoch 5/15 => Loss 0.956, Train_accy 80.990, Test_accy 81.940
2024-05-09 14:29:09,233 [mbtc.py] => {'Train loss': 0.9556711492420152}
2024-05-09 14:30:25,898 [mbtc.py] => Task 0, Epoch 6/15 => Loss 1.069
2024-05-09 14:30:25,898 [mbtc.py] => {'Train loss': 1.0688520767761551}
2024-05-09 14:31:41,994 [mbtc.py] => Task 0, Epoch 7/15 => Loss 0.924
2024-05-09 14:31:41,994 [mbtc.py] => {'Train loss': 0.9244052280906503}
2024-05-09 14:32:58,521 [mbtc.py] => Task 0, Epoch 8/15 => Loss 0.838
2024-05-09 14:32:58,521 [mbtc.py] => {'Train loss': 0.838114909202088}
2024-05-09 14:34:15,117 [mbtc.py] => Task 0, Epoch 9/15 => Loss 0.754
2024-05-09 14:34:15,118 [mbtc.py] => {'Train loss': 0.7536598557734308}
2024-05-09 14:36:07,341 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:36:24,077 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:36:24,078 [mbtc.py] => {'Train acc': 85.31, 'Test acc': 81.86}
2024-05-09 14:36:24,078 [mbtc.py] => Task 0, Epoch 10/15 => Loss 0.714, Train_accy 85.310, Test_accy 81.860
2024-05-09 14:36:24,078 [mbtc.py] => {'Train loss': 0.7140483811838936}
2024-05-09 14:37:40,510 [mbtc.py] => Task 0, Epoch 11/15 => Loss 0.667
2024-05-09 14:37:40,510 [mbtc.py] => {'Train loss': 0.6667511468852749}
2024-05-09 14:38:57,383 [mbtc.py] => Task 0, Epoch 12/15 => Loss 0.646
2024-05-09 14:38:57,384 [mbtc.py] => {'Train loss': 0.646105277629299}
2024-05-09 14:40:14,413 [mbtc.py] => Task 0, Epoch 13/15 => Loss 0.620
2024-05-09 14:40:14,413 [mbtc.py] => {'Train loss': 0.6197301558865845}
2024-05-09 14:41:31,824 [mbtc.py] => Task 0, Epoch 14/15 => Loss 0.603
2024-05-09 14:41:31,824 [mbtc.py] => {'Train loss': 0.6030011477361199}
2024-05-09 14:43:24,229 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:43:40,965 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:43:40,966 [mbtc.py] => {'Train acc': 88.2, 'Test acc': 81.96}
2024-05-09 14:43:40,966 [mbtc.py] => Task 0, Epoch 15/15 => Loss 0.571, Train_accy 88.200, Test_accy 81.960
2024-05-09 14:43:40,966 [mbtc.py] => {'Train loss': 0.5709806431568306}
2024-05-09 14:43:40,983 [mbtc.py] => Merge scalar: 0.25
2024-05-09 14:43:40,983 [mbtc.py] => ============= Uniform static merge =============
2024-05-09 14:44:03,149 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:44:03,150 [mbtc.py] => Test accuracy of model after backbone merge: 65.0
2024-05-09 14:45:19,602 [mbtc.py] => Task 0, Epoch 1/5 => Loss 1.492
2024-05-09 14:45:19,602 [mbtc.py] => {'Train loss': 1.4920505585561272}
2024-05-09 14:46:36,771 [mbtc.py] => Task 0, Epoch 2/5 => Loss 1.305
2024-05-09 14:46:36,772 [mbtc.py] => {'Train loss': 1.3049385433888618}
2024-05-09 14:47:54,923 [mbtc.py] => Task 0, Epoch 3/5 => Loss 1.235
2024-05-09 14:47:54,924 [mbtc.py] => {'Train loss': 1.2349502608066296}
2024-05-09 14:49:12,371 [mbtc.py] => Task 0, Epoch 4/5 => Loss 1.191
2024-05-09 14:49:12,371 [mbtc.py] => {'Train loss': 1.1913968754633693}
2024-05-09 14:51:04,275 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:51:21,196 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:51:21,197 [mbtc.py] => {'Train acc': 75.81, 'Test acc': 74.29}
2024-05-09 14:51:21,197 [mbtc.py] => Task 0, Epoch 5/5 => Loss 1.165, Train_accy 75.810, Test_accy 74.290
2024-05-09 14:51:21,197 [mbtc.py] => {'Train loss': 1.1652973787930176}
2024-05-09 14:51:38,015 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 14:51:38,015 [mbtc.py] => Test accuracy of model after retraining: 74.29
2024-05-09 14:52:24,527 [trainer.py] => MBTC_VIT: {'total': 74.29, '00-344': 74.29, 'old': 0, 'new': 74.29}
2024-05-09 14:52:24,527 [trainer.py] => NME: {'total': 0.32, '00-344': 0.32, 'old': 0, 'new': 0.32}
2024-05-09 14:52:24,527 [trainer.py] => MBTC_VIT top1 curve: [74.29]
2024-05-09 14:52:24,527 [trainer.py] => NME top1 curve: [0.32]
2024-05-09 14:52:24,527 [trainer.py] => Average NME top1: 0.32
2024-05-09 14:52:24,527 [trainer.py] => Average top1: 74.29
2024-05-09 14:52:24,528 [trainer.py] => All params: 91591145
2024-05-09 14:52:24,528 [trainer.py] => Trainable params: 91591145
2024-05-09 14:52:24,528 [mbtc.py] => Learning on 345-690
2024-05-09 15:02:01,946 [mbtc.py] => Task 1, Epoch 1/15 => Loss 5.296
2024-05-09 15:02:01,947 [mbtc.py] => {'Train loss': 5.29566908812692}
2024-05-09 15:03:26,462 [mbtc.py] => Task 1, Epoch 2/15 => Loss 3.364
2024-05-09 15:03:26,462 [mbtc.py] => {'Train loss': 3.3636964212918112}
2024-05-09 15:04:53,659 [mbtc.py] => Task 1, Epoch 3/15 => Loss 2.837
2024-05-09 15:04:53,659 [mbtc.py] => {'Train loss': 2.8370621906104665}
2024-05-09 15:06:18,478 [mbtc.py] => Task 1, Epoch 4/15 => Loss 2.605
2024-05-09 15:06:18,479 [mbtc.py] => {'Train loss': 2.6053428007355817}
2024-05-09 15:08:23,086 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:08:57,189 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:08:57,190 [mbtc.py] => {'Train acc': 50.63, 'Test acc': 57.11}
2024-05-09 15:08:57,190 [mbtc.py] => Task 1, Epoch 5/15 => Loss 2.470, Train_accy 50.630, Test_accy 57.110
2024-05-09 15:08:57,190 [mbtc.py] => {'Train loss': 2.469737450704507}
2024-05-09 15:10:21,970 [mbtc.py] => Task 1, Epoch 6/15 => Loss 2.660
2024-05-09 15:10:21,971 [mbtc.py] => {'Train loss': 2.660010460420703}
2024-05-09 15:11:46,626 [mbtc.py] => Task 1, Epoch 7/15 => Loss 2.442
2024-05-09 15:11:46,626 [mbtc.py] => {'Train loss': 2.4422308024785195}
2024-05-09 15:13:10,670 [mbtc.py] => Task 1, Epoch 8/15 => Loss 2.299
2024-05-09 15:13:10,670 [mbtc.py] => {'Train loss': 2.299103503954326}
2024-05-09 15:14:33,720 [mbtc.py] => Task 1, Epoch 9/15 => Loss 2.162
2024-05-09 15:14:33,720 [mbtc.py] => {'Train loss': 2.1619474963938936}
2024-05-09 15:16:34,776 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:17:06,984 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:17:06,985 [mbtc.py] => {'Train acc': 57.62, 'Test acc': 58.9}
2024-05-09 15:17:06,985 [mbtc.py] => Task 1, Epoch 10/15 => Loss 2.065, Train_accy 57.620, Test_accy 58.900
2024-05-09 15:17:06,985 [mbtc.py] => {'Train loss': 2.064944252054742}
2024-05-09 15:18:29,378 [mbtc.py] => Task 1, Epoch 11/15 => Loss 1.962
2024-05-09 15:18:29,379 [mbtc.py] => {'Train loss': 1.9622922763756827}
2024-05-09 15:19:52,112 [mbtc.py] => Task 1, Epoch 12/15 => Loss 1.897
2024-05-09 15:19:52,112 [mbtc.py] => {'Train loss': 1.896689031141024}
2024-05-09 15:21:15,727 [mbtc.py] => Task 1, Epoch 13/15 => Loss 1.804
2024-05-09 15:21:15,727 [mbtc.py] => {'Train loss': 1.8044700736695147}
2024-05-09 15:22:41,400 [mbtc.py] => Task 1, Epoch 14/15 => Loss 1.732
2024-05-09 15:22:41,400 [mbtc.py] => {'Train loss': 1.7321189625043396}
2024-05-09 15:24:44,528 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:25:17,458 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:25:17,458 [mbtc.py] => {'Train acc': 65.48, 'Test acc': 59.12}
2024-05-09 15:25:17,458 [mbtc.py] => Task 1, Epoch 15/15 => Loss 1.656, Train_accy 65.480, Test_accy 59.120
2024-05-09 15:25:17,458 [mbtc.py] => {'Train loss': 1.6555265412262992}
2024-05-09 15:25:17,468 [mbtc.py] => Merge scalar: 0.25
2024-05-09 15:25:17,468 [mbtc.py] => ============= Uniform static merge =============
2024-05-09 15:26:00,914 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:26:00,915 [mbtc.py] => Test accuracy of model after backbone merge: 59.5
2024-05-09 15:27:23,106 [mbtc.py] => Task 1, Epoch 1/5 => Loss 2.291
2024-05-09 15:27:23,107 [mbtc.py] => {'Train loss': 2.2912616640963455}
2024-05-09 15:28:46,069 [mbtc.py] => Task 1, Epoch 2/5 => Loss 2.194
2024-05-09 15:28:46,070 [mbtc.py] => {'Train loss': 2.1936179264217404}
2024-05-09 15:30:08,594 [mbtc.py] => Task 1, Epoch 3/5 => Loss 2.145
2024-05-09 15:30:08,594 [mbtc.py] => {'Train loss': 2.145177260358283}
2024-05-09 15:31:30,995 [mbtc.py] => Task 1, Epoch 4/5 => Loss 2.110
2024-05-09 15:31:30,996 [mbtc.py] => {'Train loss': 2.1098267258481775}
2024-05-09 15:33:33,695 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:34:06,869 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:34:06,869 [mbtc.py] => {'Train acc': 45.66, 'Test acc': 60.48}
2024-05-09 15:34:06,870 [mbtc.py] => Task 1, Epoch 5/5 => Loss 2.087, Train_accy 45.660, Test_accy 60.480
2024-05-09 15:34:06,870 [mbtc.py] => {'Train loss': 2.087243288544053}
2024-05-09 15:34:40,784 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:34:40,785 [mbtc.py] => Test accuracy of model after retraining: 60.48
2024-05-09 15:34:40,796 [mbtc.py] => The OT cost: 0.00000
2024-05-09 15:34:40,796 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 15:34:40,796 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 15:35:25,085 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:35:25,086 [mbtc.py] => Test accuracy of model after classifier transport: 60.48
2024-05-09 15:37:02,070 [trainer.py] => MBTC_VIT: {'total': 60.48, '00-344': 79.31, '345-689': 42.82, 'old': 79.31, 'new': 42.82}
2024-05-09 15:37:02,070 [trainer.py] => NME: {'total': 0.69, '00-344': 0.55, '345-689': 0.81, 'old': 0.55, 'new': 0.81}
2024-05-09 15:37:02,070 [trainer.py] => MBTC_VIT top1 curve: [74.29, 60.48]
2024-05-09 15:37:02,070 [trainer.py] => NME top1 curve: [0.32, 0.69]
2024-05-09 15:37:02,070 [trainer.py] => Average NME top1: 0.505
2024-05-09 15:37:02,070 [trainer.py] => Average top1: 67.385
2024-05-09 15:37:02,071 [trainer.py] => All params: 91856105
2024-05-09 15:37:02,071 [trainer.py] => Trainable params: 91856105
2024-05-09 15:37:02,071 [mbtc.py] => Learning on 690-1035
2024-05-09 15:46:22,676 [mbtc.py] => Task 2, Epoch 1/15 => Loss 3.539
2024-05-09 15:46:22,676 [mbtc.py] => {'Train loss': 3.538707338613907}
2024-05-09 15:48:17,883 [mbtc.py] => Task 2, Epoch 2/15 => Loss 1.443
2024-05-09 15:48:17,883 [mbtc.py] => {'Train loss': 1.4430824705791958}
2024-05-09 15:50:12,375 [mbtc.py] => Task 2, Epoch 3/15 => Loss 1.232
2024-05-09 15:50:12,375 [mbtc.py] => {'Train loss': 1.2319912695642656}
2024-05-09 15:52:07,055 [mbtc.py] => Task 2, Epoch 4/15 => Loss 1.116
2024-05-09 15:52:07,055 [mbtc.py] => {'Train loss': 1.1158673646788912}
2024-05-09 15:54:55,054 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:55:50,221 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 15:55:50,221 [mbtc.py] => {'Train acc': 78.07, 'Test acc': 61.7}
2024-05-09 15:55:50,221 [mbtc.py] => Task 2, Epoch 5/15 => Loss 1.036, Train_accy 78.070, Test_accy 61.700
2024-05-09 15:55:50,221 [mbtc.py] => {'Train loss': 1.0360007606787125}
2024-05-09 15:57:44,901 [mbtc.py] => Task 2, Epoch 6/15 => Loss 1.175
2024-05-09 15:57:44,901 [mbtc.py] => {'Train loss': 1.175447005759641}
2024-05-09 15:59:44,352 [mbtc.py] => Task 2, Epoch 7/15 => Loss 1.058
2024-05-09 15:59:44,352 [mbtc.py] => {'Train loss': 1.058283178183028}
2024-05-09 16:01:42,136 [mbtc.py] => Task 2, Epoch 8/15 => Loss 0.971
2024-05-09 16:01:42,136 [mbtc.py] => {'Train loss': 0.9711510991384535}
2024-05-09 16:03:37,566 [mbtc.py] => Task 2, Epoch 9/15 => Loss 0.921
2024-05-09 16:03:37,566 [mbtc.py] => {'Train loss': 0.9206933327737798}
2024-05-09 16:06:24,090 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:07:18,373 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:07:18,374 [mbtc.py] => {'Train acc': 82.34, 'Test acc': 60.59}
2024-05-09 16:07:18,374 [mbtc.py] => Task 2, Epoch 10/15 => Loss 0.857, Train_accy 82.340, Test_accy 60.590
2024-05-09 16:07:18,374 [mbtc.py] => {'Train loss': 0.8574896129557323}
2024-05-09 16:09:14,854 [mbtc.py] => Task 2, Epoch 11/15 => Loss 0.813
2024-05-09 16:09:14,854 [mbtc.py] => {'Train loss': 0.8133546291722864}
2024-05-09 16:11:12,445 [mbtc.py] => Task 2, Epoch 12/15 => Loss 0.768
2024-05-09 16:11:12,445 [mbtc.py] => {'Train loss': 0.7681796133215657}
2024-05-09 16:13:08,730 [mbtc.py] => Task 2, Epoch 13/15 => Loss 0.747
2024-05-09 16:13:08,730 [mbtc.py] => {'Train loss': 0.7466824731699706}
2024-05-09 16:15:04,396 [mbtc.py] => Task 2, Epoch 14/15 => Loss 0.714
2024-05-09 16:15:04,397 [mbtc.py] => {'Train loss': 0.7143781920374953}
2024-05-09 16:17:53,859 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:18:46,495 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:18:46,495 [mbtc.py] => {'Train acc': 85.4, 'Test acc': 60.25}
2024-05-09 16:18:46,496 [mbtc.py] => Task 2, Epoch 15/15 => Loss 0.676, Train_accy 85.400, Test_accy 60.250
2024-05-09 16:18:46,496 [mbtc.py] => {'Train loss': 0.6759163354556572}
2024-05-09 16:18:46,509 [mbtc.py] => Merge scalar: 0.25
2024-05-09 16:18:46,509 [mbtc.py] => ============= Uniform static merge =============
2024-05-09 16:19:59,029 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:19:59,030 [mbtc.py] => Test accuracy of model after backbone merge: 66.7
2024-05-09 16:21:51,613 [mbtc.py] => Task 2, Epoch 1/5 => Loss 0.983
2024-05-09 16:21:51,614 [mbtc.py] => {'Train loss': 0.9834372508646873}
2024-05-09 16:23:44,530 [mbtc.py] => Task 2, Epoch 2/5 => Loss 0.915
2024-05-09 16:23:44,531 [mbtc.py] => {'Train loss': 0.9151283233298868}
2024-05-09 16:25:37,640 [mbtc.py] => Task 2, Epoch 3/5 => Loss 0.881
2024-05-09 16:25:37,640 [mbtc.py] => {'Train loss': 0.8811123172946388}
2024-05-09 16:27:31,885 [mbtc.py] => Task 2, Epoch 4/5 => Loss 0.868
2024-05-09 16:27:31,885 [mbtc.py] => {'Train loss': 0.8681522179678612}
2024-05-09 16:30:19,026 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:31:14,321 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:31:14,322 [mbtc.py] => {'Train acc': 77.08, 'Test acc': 67.64}
2024-05-09 16:31:14,322 [mbtc.py] => Task 2, Epoch 5/5 => Loss 0.852, Train_accy 77.080, Test_accy 67.640
2024-05-09 16:31:14,322 [mbtc.py] => {'Train loss': 0.8517681930573459}
2024-05-09 16:32:12,185 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:32:12,185 [mbtc.py] => Test accuracy of model after retraining: 67.64
2024-05-09 16:32:12,196 [mbtc.py] => The OT cost: 0.00000
2024-05-09 16:32:12,196 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 16:32:12,196 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 16:32:12,200 [mbtc.py] => The OT cost: 0.00000
2024-05-09 16:32:12,200 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 16:32:12,200 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 16:33:26,937 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 16:33:26,937 [mbtc.py] => Test accuracy of model after classifier transport: 67.64
2024-05-09 16:36:20,422 [trainer.py] => MBTC_VIT: {'total': 67.64, '00-344': 79.88, '345-689': 43.47, '690-1034': 76.7, 'old': 61.08, 'new': 76.7}
2024-05-09 16:36:20,423 [trainer.py] => NME: {'total': 0.45, '00-344': 0.8, '345-689': 0.17, '690-1034': 0.41, 'old': 0.48, 'new': 0.41}
2024-05-09 16:36:20,423 [trainer.py] => MBTC_VIT top1 curve: [74.29, 60.48, 67.64]
2024-05-09 16:36:20,423 [trainer.py] => NME top1 curve: [0.32, 0.69, 0.45]
2024-05-09 16:36:20,423 [trainer.py] => Average NME top1: 0.48666666666666664
2024-05-09 16:36:20,423 [trainer.py] => Average top1: 67.47000000000001
2024-05-09 16:36:20,424 [trainer.py] => All params: 92121065
2024-05-09 16:36:20,425 [trainer.py] => Trainable params: 92121065
2024-05-09 16:36:20,425 [mbtc.py] => Learning on 1035-1380
2024-05-09 16:49:26,309 [mbtc.py] => Task 3, Epoch 1/15 => Loss 4.536
2024-05-09 16:49:26,309 [mbtc.py] => {'Train loss': 4.535808634960045}
2024-05-09 16:53:56,916 [mbtc.py] => Task 3, Epoch 2/15 => Loss 2.638
2024-05-09 16:53:56,916 [mbtc.py] => {'Train loss': 2.6384911371742263}
2024-05-09 16:58:29,348 [mbtc.py] => Task 3, Epoch 3/15 => Loss 2.359
2024-05-09 16:58:29,349 [mbtc.py] => {'Train loss': 2.359168140059811}
2024-05-09 17:03:01,687 [mbtc.py] => Task 3, Epoch 4/15 => Loss 2.217
2024-05-09 17:03:01,688 [mbtc.py] => {'Train loss': 2.216875896236654}
2024-05-09 17:09:32,991 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 17:11:14,782 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 17:11:14,782 [mbtc.py] => {'Train acc': 51.22, 'Test acc': 54.21}
2024-05-09 17:11:14,783 [mbtc.py] => Task 3, Epoch 5/15 => Loss 2.144, Train_accy 51.220, Test_accy 54.210
2024-05-09 17:11:14,783 [mbtc.py] => {'Train loss': 2.143805159476854}
2024-05-09 17:15:47,111 [mbtc.py] => Task 3, Epoch 6/15 => Loss 2.309
2024-05-09 17:15:47,111 [mbtc.py] => {'Train loss': 2.308643830150871}
2024-05-09 17:20:18,348 [mbtc.py] => Task 3, Epoch 7/15 => Loss 2.190
2024-05-09 17:20:18,349 [mbtc.py] => {'Train loss': 2.190200159989171}
2024-05-09 17:24:49,051 [mbtc.py] => Task 3, Epoch 8/15 => Loss 2.118
2024-05-09 17:24:49,051 [mbtc.py] => {'Train loss': 2.118359937758769}
2024-05-09 17:29:22,575 [mbtc.py] => Task 3, Epoch 9/15 => Loss 2.051
2024-05-09 17:29:22,575 [mbtc.py] => {'Train loss': 2.0507203654970154}
2024-05-09 17:35:55,249 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 17:37:38,242 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 17:37:38,242 [mbtc.py] => {'Train acc': 53.6, 'Test acc': 47.25}
2024-05-09 17:37:38,242 [mbtc.py] => Task 3, Epoch 10/15 => Loss 2.022, Train_accy 53.600, Test_accy 47.250
2024-05-09 17:37:38,242 [mbtc.py] => {'Train loss': 2.0219275735444944}
2024-05-09 17:42:09,605 [mbtc.py] => Task 3, Epoch 11/15 => Loss 1.989
2024-05-09 17:42:09,605 [mbtc.py] => {'Train loss': 1.9891523535726434}
2024-05-09 17:46:40,849 [mbtc.py] => Task 3, Epoch 12/15 => Loss 1.947
2024-05-09 17:46:40,850 [mbtc.py] => {'Train loss': 1.9473338295089997}
2024-05-09 17:51:14,050 [mbtc.py] => Task 3, Epoch 13/15 => Loss 1.933
2024-05-09 17:51:14,051 [mbtc.py] => {'Train loss': 1.9327554656034809}
2024-05-09 17:55:52,686 [mbtc.py] => Task 3, Epoch 14/15 => Loss 1.899
2024-05-09 17:55:52,686 [mbtc.py] => {'Train loss': 1.898747705301996}
2024-05-09 18:02:24,004 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:04:08,843 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:04:08,843 [mbtc.py] => {'Train acc': 56.81, 'Test acc': 45.7}
2024-05-09 18:04:08,844 [mbtc.py] => Task 3, Epoch 15/15 => Loss 1.882, Train_accy 56.810, Test_accy 45.700
2024-05-09 18:04:08,844 [mbtc.py] => {'Train loss': 1.8815138874165083}
2024-05-09 18:04:08,856 [mbtc.py] => Merge scalar: 0.25
2024-05-09 18:04:08,857 [mbtc.py] => ============= Uniform static merge =============
2024-05-09 18:06:33,880 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:06:33,881 [mbtc.py] => Test accuracy of model after backbone merge: 56.12
2024-05-09 18:11:03,029 [mbtc.py] => Task 3, Epoch 1/5 => Loss 2.614
2024-05-09 18:11:03,030 [mbtc.py] => {'Train loss': 2.6143833612233904}
2024-05-09 18:15:31,588 [mbtc.py] => Task 3, Epoch 2/5 => Loss 2.442
2024-05-09 18:15:31,589 [mbtc.py] => {'Train loss': 2.4419842252539374}
2024-05-09 18:19:59,033 [mbtc.py] => Task 3, Epoch 3/5 => Loss 2.407
2024-05-09 18:19:59,033 [mbtc.py] => {'Train loss': 2.406992392267211}
2024-05-09 18:24:24,349 [mbtc.py] => Task 3, Epoch 4/5 => Loss 2.396
2024-05-09 18:24:24,349 [mbtc.py] => {'Train loss': 2.3958164160534485}
2024-05-09 18:30:50,561 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:32:35,855 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:32:35,855 [mbtc.py] => {'Train acc': 42.58, 'Test acc': 63.4}
2024-05-09 18:32:35,855 [mbtc.py] => Task 3, Epoch 5/5 => Loss 2.379, Train_accy 42.580, Test_accy 63.400
2024-05-09 18:32:35,855 [mbtc.py] => {'Train loss': 2.3794649807830988}
2024-05-09 18:34:21,587 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:34:21,588 [mbtc.py] => Test accuracy of model after retraining: 63.4
2024-05-09 18:34:21,598 [mbtc.py] => The OT cost: 0.00000
2024-05-09 18:34:21,598 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 18:34:21,598 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 18:34:21,601 [mbtc.py] => The OT cost: 0.00000
2024-05-09 18:34:21,602 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 18:34:21,602 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 18:34:21,605 [mbtc.py] => The OT cost: 0.00000
2024-05-09 18:34:21,605 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 18:34:21,605 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 18:36:46,670 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 18:36:46,671 [mbtc.py] => Test accuracy of model after classifier transport: 63.4
2024-05-09 18:42:45,172 [trainer.py] => MBTC_VIT: {'total': 63.4, '00-344': 80.07, '345-689': 41.72, '690-1034': 75.48, '1035-1379': 60.13, 'old': 66.66, 'new': 60.13}
2024-05-09 18:42:45,172 [trainer.py] => NME: {'total': 0.4, '00-344': 0.8, '345-689': 0.17, '690-1034': 0.41, '1035-1379': 0.35, 'old': 0.45, 'new': 0.35}
2024-05-09 18:42:45,172 [trainer.py] => MBTC_VIT top1 curve: [74.29, 60.48, 67.64, 63.4]
2024-05-09 18:42:45,172 [trainer.py] => NME top1 curve: [0.32, 0.69, 0.45, 0.4]
2024-05-09 18:42:45,172 [trainer.py] => Average NME top1: 0.46499999999999997
2024-05-09 18:42:45,172 [trainer.py] => Average top1: 66.4525
2024-05-09 18:42:45,173 [trainer.py] => All params: 92386025
2024-05-09 18:42:45,173 [trainer.py] => Trainable params: 92386025
2024-05-09 18:42:45,173 [mbtc.py] => Learning on 1380-1725
2024-05-09 18:57:56,413 [mbtc.py] => Task 4, Epoch 1/15 => Loss 1.770
2024-05-09 18:57:56,413 [mbtc.py] => {'Train loss': 1.770311181791245}
2024-05-09 19:02:29,812 [mbtc.py] => Task 4, Epoch 2/15 => Loss 0.728
2024-05-09 19:02:29,813 [mbtc.py] => {'Train loss': 0.7283811896250992}
2024-05-09 19:07:02,768 [mbtc.py] => Task 4, Epoch 3/15 => Loss 0.651
2024-05-09 19:07:02,768 [mbtc.py] => {'Train loss': 0.6513711861517063}
2024-05-09 19:11:36,089 [mbtc.py] => Task 4, Epoch 4/15 => Loss 0.620
2024-05-09 19:11:36,090 [mbtc.py] => {'Train loss': 0.619544802834748}
2024-05-09 19:18:07,578 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 19:20:40,503 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 19:20:40,504 [mbtc.py] => {'Train acc': 86.44, 'Test acc': 51.5}
2024-05-09 19:20:40,504 [mbtc.py] => Task 4, Epoch 5/15 => Loss 0.588, Train_accy 86.440, Test_accy 51.500
2024-05-09 19:20:40,504 [mbtc.py] => {'Train loss': 0.5884845344162491}
2024-05-09 19:25:13,323 [mbtc.py] => Task 4, Epoch 6/15 => Loss 0.691
2024-05-09 19:25:13,324 [mbtc.py] => {'Train loss': 0.6911836028414429}
2024-05-09 19:29:46,427 [mbtc.py] => Task 4, Epoch 7/15 => Loss 0.640
2024-05-09 19:29:46,428 [mbtc.py] => {'Train loss': 0.6404584811478065}
2024-05-09 19:34:16,642 [mbtc.py] => Task 4, Epoch 8/15 => Loss 0.609
2024-05-09 19:34:16,642 [mbtc.py] => {'Train loss': 0.6092731116309998}
2024-05-09 19:38:48,131 [mbtc.py] => Task 4, Epoch 9/15 => Loss 0.580
2024-05-09 19:38:48,132 [mbtc.py] => {'Train loss': 0.5803792167277563}
2024-05-09 19:45:24,833 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 19:48:02,885 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 19:48:02,886 [mbtc.py] => {'Train acc': 87.65, 'Test acc': 49.42}
2024-05-09 19:48:02,886 [mbtc.py] => Task 4, Epoch 10/15 => Loss 0.554, Train_accy 87.650, Test_accy 49.420
2024-05-09 19:48:02,886 [mbtc.py] => {'Train loss': 0.5538169354673416}
2024-05-09 19:52:35,381 [mbtc.py] => Task 4, Epoch 11/15 => Loss 0.539
2024-05-09 19:52:35,381 [mbtc.py] => {'Train loss': 0.5389951074880267}
2024-05-09 19:57:09,185 [mbtc.py] => Task 4, Epoch 12/15 => Loss 0.523
2024-05-09 19:57:09,186 [mbtc.py] => {'Train loss': 0.5232288255893364}
2024-05-09 20:01:41,698 [mbtc.py] => Task 4, Epoch 13/15 => Loss 0.502
2024-05-09 20:01:41,698 [mbtc.py] => {'Train loss': 0.5021699815515488}
2024-05-09 20:06:13,933 [mbtc.py] => Task 4, Epoch 14/15 => Loss 0.489
2024-05-09 20:06:13,933 [mbtc.py] => {'Train loss': 0.48875455149897823}
2024-05-09 20:12:45,481 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:15:20,172 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:15:20,173 [mbtc.py] => {'Train acc': 89.3, 'Test acc': 47.57}
2024-05-09 20:15:20,173 [mbtc.py] => Task 4, Epoch 15/15 => Loss 0.470, Train_accy 89.300, Test_accy 47.570
2024-05-09 20:15:20,173 [mbtc.py] => {'Train loss': 0.47042864472777757}
2024-05-09 20:15:20,185 [mbtc.py] => Merge scalar: 0.25
2024-05-09 20:15:20,186 [mbtc.py] => ============= Uniform static merge =============
2024-05-09 20:18:57,381 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:18:57,382 [mbtc.py] => Test accuracy of model after backbone merge: 68.37
2024-05-09 20:23:31,190 [mbtc.py] => Task 4, Epoch 1/5 => Loss 0.646
2024-05-09 20:23:31,190 [mbtc.py] => {'Train loss': 0.6463714721972349}
2024-05-09 20:28:02,229 [mbtc.py] => Task 4, Epoch 2/5 => Loss 0.592
2024-05-09 20:28:02,229 [mbtc.py] => {'Train loss': 0.591504049916116}
2024-05-09 20:32:31,940 [mbtc.py] => Task 4, Epoch 3/5 => Loss 0.580
2024-05-09 20:32:31,941 [mbtc.py] => {'Train loss': 0.5803677067554817}
2024-05-09 20:36:59,556 [mbtc.py] => Task 4, Epoch 4/5 => Loss 0.577
2024-05-09 20:36:59,556 [mbtc.py] => {'Train loss': 0.5768346242173008}
2024-05-09 20:43:24,138 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:45:52,481 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:45:52,482 [mbtc.py] => {'Train acc': 85.71, 'Test acc': 69.34}
2024-05-09 20:45:52,482 [mbtc.py] => Task 4, Epoch 5/5 => Loss 0.574, Train_accy 85.710, Test_accy 69.340
2024-05-09 20:45:52,482 [mbtc.py] => {'Train loss': 0.5744719169757985}
2024-05-09 20:48:26,899 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:48:26,900 [mbtc.py] => Test accuracy of model after retraining: 69.34
2024-05-09 20:48:26,916 [mbtc.py] => The OT cost: 0.00000
2024-05-09 20:48:26,916 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 20:48:26,917 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 20:48:26,919 [mbtc.py] => The OT cost: 0.00000
2024-05-09 20:48:26,920 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 20:48:26,920 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 20:48:26,923 [mbtc.py] => The OT cost: 0.00000
2024-05-09 20:48:26,923 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 20:48:26,923 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 20:48:26,926 [mbtc.py] => The OT cost: 0.00000
2024-05-09 20:48:26,926 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 20:48:26,926 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 20:51:58,578 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 20:51:58,578 [mbtc.py] => Test accuracy of model after classifier transport: 69.34
2024-05-09 21:01:18,242 [trainer.py] => MBTC_VIT: {'total': 69.34, '00-344': 78.96, '345-689': 40.59, '690-1034': 71.8, '1035-1379': 56.28, '1380-1724': 87.2, 'old': 60.38, 'new': 87.2}
2024-05-09 21:01:18,243 [trainer.py] => NME: {'total': 0.44, '00-344': 0.79, '345-689': 0.17, '690-1034': 0.4, '1035-1379': 0.36, '1380-1724': 0.52, 'old': 0.4, 'new': 0.52}
2024-05-09 21:01:18,243 [trainer.py] => MBTC_VIT top1 curve: [74.29, 60.48, 67.64, 63.4, 69.34]
2024-05-09 21:01:18,243 [trainer.py] => NME top1 curve: [0.32, 0.69, 0.45, 0.4, 0.44]
2024-05-09 21:01:18,243 [trainer.py] => Average NME top1: 0.45999999999999996
2024-05-09 21:01:18,243 [trainer.py] => Average top1: 67.03
2024-05-09 21:01:18,243 [trainer.py] => All params: 92650985
2024-05-09 21:01:18,244 [trainer.py] => Trainable params: 92650985
2024-05-09 21:01:18,244 [mbtc.py] => Learning on 1725-2070
2024-05-09 21:12:08,751 [mbtc.py] => Task 5, Epoch 1/15 => Loss 4.567
2024-05-09 21:12:08,752 [mbtc.py] => {'Train loss': 4.566745397266722}
2024-05-09 21:14:02,028 [mbtc.py] => Task 5, Epoch 2/15 => Loss 1.955
2024-05-09 21:14:02,028 [mbtc.py] => {'Train loss': 1.9545292370515412}
2024-05-09 21:15:55,445 [mbtc.py] => Task 5, Epoch 3/15 => Loss 1.602
2024-05-09 21:15:55,445 [mbtc.py] => {'Train loss': 1.6022670888774275}
2024-05-09 21:17:48,100 [mbtc.py] => Task 5, Epoch 4/15 => Loss 1.451
2024-05-09 21:17:48,100 [mbtc.py] => {'Train loss': 1.4514271188477939}
2024-05-09 21:20:32,610 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:23:26,754 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:23:26,754 [mbtc.py] => {'Train acc': 70.57, 'Test acc': 59.38}
2024-05-09 21:23:26,755 [mbtc.py] => Task 5, Epoch 5/15 => Loss 1.345, Train_accy 70.570, Test_accy 59.380
2024-05-09 21:23:26,755 [mbtc.py] => {'Train loss': 1.3446485212057908}
2024-05-09 21:25:16,585 [mbtc.py] => Task 5, Epoch 6/15 => Loss 1.511
2024-05-09 21:25:16,586 [mbtc.py] => {'Train loss': 1.5105068104969095}
2024-05-09 21:27:08,130 [mbtc.py] => Task 5, Epoch 7/15 => Loss 1.359
2024-05-09 21:27:08,130 [mbtc.py] => {'Train loss': 1.3588017062419921}
2024-05-09 21:28:59,151 [mbtc.py] => Task 5, Epoch 8/15 => Loss 1.260
2024-05-09 21:28:59,151 [mbtc.py] => {'Train loss': 1.2604072688429047}
2024-05-09 21:30:50,701 [mbtc.py] => Task 5, Epoch 9/15 => Loss 1.189
2024-05-09 21:30:50,702 [mbtc.py] => {'Train loss': 1.1887748186088682}
2024-05-09 21:33:33,311 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:36:30,515 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:36:30,515 [mbtc.py] => {'Train acc': 75.03, 'Test acc': 57.44}
2024-05-09 21:36:30,516 [mbtc.py] => Task 5, Epoch 10/15 => Loss 1.126, Train_accy 75.030, Test_accy 57.440
2024-05-09 21:36:30,516 [mbtc.py] => {'Train loss': 1.126301960856592}
2024-05-09 21:38:21,339 [mbtc.py] => Task 5, Epoch 11/15 => Loss 1.069
2024-05-09 21:38:21,340 [mbtc.py] => {'Train loss': 1.0687164423952684}
2024-05-09 21:40:12,826 [mbtc.py] => Task 5, Epoch 12/15 => Loss 1.026
2024-05-09 21:40:12,826 [mbtc.py] => {'Train loss': 1.0264449544863612}
2024-05-09 21:42:04,257 [mbtc.py] => Task 5, Epoch 13/15 => Loss 0.984
2024-05-09 21:42:04,257 [mbtc.py] => {'Train loss': 0.9836866623210654}
2024-05-09 21:43:55,628 [mbtc.py] => Task 5, Epoch 14/15 => Loss 0.937
2024-05-09 21:43:55,628 [mbtc.py] => {'Train loss': 0.9368413025883844}
2024-05-09 21:46:38,988 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:49:39,197 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:49:39,197 [mbtc.py] => {'Train acc': 79.63, 'Test acc': 56.41}
2024-05-09 21:49:39,198 [mbtc.py] => Task 5, Epoch 15/15 => Loss 0.915, Train_accy 79.630, Test_accy 56.410
2024-05-09 21:49:39,198 [mbtc.py] => {'Train loss': 0.914672640653757}
2024-05-09 21:49:39,210 [mbtc.py] => Merge scalar: 0.25
2024-05-09 21:49:39,210 [mbtc.py] => ============= Uniform static merge =============
2024-05-09 21:53:40,333 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 21:53:40,333 [mbtc.py] => Test accuracy of model after backbone merge: 68.22
2024-05-09 21:55:29,032 [mbtc.py] => Task 5, Epoch 1/5 => Loss 1.291
2024-05-09 21:55:29,033 [mbtc.py] => {'Train loss': 1.291159170375895}
2024-05-09 21:57:18,033 [mbtc.py] => Task 5, Epoch 2/5 => Loss 1.209
2024-05-09 21:57:18,034 [mbtc.py] => {'Train loss': 1.208655624554075}
2024-05-09 21:59:07,000 [mbtc.py] => Task 5, Epoch 3/5 => Loss 1.171
2024-05-09 21:59:07,001 [mbtc.py] => {'Train loss': 1.1705852157241154}
2024-05-09 22:00:55,561 [mbtc.py] => Task 5, Epoch 4/5 => Loss 1.144
2024-05-09 22:00:55,562 [mbtc.py] => {'Train loss': 1.1440733781860108}
2024-05-09 22:03:34,949 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 22:06:33,056 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 22:06:33,057 [mbtc.py] => {'Train acc': 66.15, 'Test acc': 68.52}
2024-05-09 22:06:33,057 [mbtc.py] => Task 5, Epoch 5/5 => Loss 1.132, Train_accy 66.150, Test_accy 68.520
2024-05-09 22:06:33,057 [mbtc.py] => {'Train loss': 1.1321878075915874}
2024-05-09 22:09:34,413 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 22:09:34,414 [mbtc.py] => Test accuracy of model after retraining: 68.52
2024-05-09 22:09:34,424 [mbtc.py] => The OT cost: 0.00000
2024-05-09 22:09:34,424 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 22:09:34,424 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 22:09:34,427 [mbtc.py] => The OT cost: 0.00000
2024-05-09 22:09:34,427 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 22:09:34,428 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 22:09:34,431 [mbtc.py] => The OT cost: 0.00000
2024-05-09 22:09:34,431 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 22:09:34,431 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 22:09:34,434 [mbtc.py] => The OT cost: 0.00000
2024-05-09 22:09:34,434 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 22:09:34,434 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 22:09:34,437 [mbtc.py] => The OT cost: 0.00000
2024-05-09 22:09:34,437 [mbtc.py] => Head merge ratio: 0.25
2024-05-09 22:09:34,437 [mbtc.py] => Distance between old head weight and updated head weight: 0.0000000000
2024-05-09 22:13:37,346 [base.py] => Hint: You are using _compute_accuracy_domain().
2024-05-09 22:13:37,346 [mbtc.py] => Test accuracy of model after classifier transport: 68.52
2024-05-09 22:24:32,323 [trainer.py] => MBTC_VIT: {'total': 68.52, '00-344': 79.29, '345-689': 40.28, '690-1034': 70.9, '1035-1379': 54.2, '1380-1724': 86.51, '1725-2069': 70.22, 'old': 68.29, 'new': 70.22}
2024-05-09 22:24:32,324 [trainer.py] => NME: {'total': 0.43, '00-344': 0.79, '345-689': 0.16, '690-1034': 0.4, '1035-1379': 0.33, '1380-1724': 0.52, '1725-2069': 0.44, 'old': 0.43, 'new': 0.44}
2024-05-09 22:24:32,324 [trainer.py] => MBTC_VIT top1 curve: [74.29, 60.48, 67.64, 63.4, 69.34, 68.52]
2024-05-09 22:24:32,324 [trainer.py] => NME top1 curve: [0.32, 0.69, 0.45, 0.4, 0.44, 0.43]
2024-05-09 22:24:32,324 [trainer.py] => Average NME top1: 0.455
2024-05-09 22:24:32,324 [trainer.py] => Average top1: 67.27833333333332
2024-05-09 22:24:32,324 [trainer.py] => Accuracy Matrix:
2024-05-09 22:24:32,324 [trainer.py] => [74.29  0.    0.    0.    0.    0.  ]
2024-05-09 22:24:32,325 [trainer.py] => [79.31 42.82  0.    0.    0.    0.  ]
2024-05-09 22:24:32,325 [trainer.py] => [79.88 43.47 76.7   0.    0.    0.  ]
2024-05-09 22:24:32,325 [trainer.py] => [80.07 41.72 75.48 60.13  0.    0.  ]
2024-05-09 22:24:32,326 [trainer.py] => [78.96 40.59 71.8  56.28 87.2   0.  ]
2024-05-09 22:24:32,326 [trainer.py] => [79.29 40.28 70.9  54.2  86.51 70.22]
2024-05-09 22:24:32,326 [trainer.py] => Forgetting (after last task): 3.277999999999996
2024-05-09 22:24:32,326 [trainer.py] => NME Accuracy Matrix:
2024-05-09 22:24:32,326 [trainer.py] => [0.32 0.   0.   0.   0.   0.  ]
2024-05-09 22:24:32,326 [trainer.py] => [0.55 0.81 0.   0.   0.   0.  ]
2024-05-09 22:24:32,327 [trainer.py] => [0.8  0.17 0.41 0.   0.   0.  ]
2024-05-09 22:24:32,327 [trainer.py] => [0.8  0.17 0.41 0.35 0.   0.  ]
2024-05-09 22:24:32,327 [trainer.py] => [0.79 0.17 0.4  0.36 0.52 0.  ]
2024-05-09 22:24:32,327 [trainer.py] => [0.79 0.16 0.4  0.33 0.52 0.44]
2024-05-09 22:24:32,327 [trainer.py] => NME Forgetting (after last task): 0.13999999999999999
